#!/bin/bash

set -e

# arguments from Makefile
outfile="$1"
format="$2"
infile="$3"
version="$4"

# extract name and chapter from outfile
setnamechapter() {
    name="$1"
    chapter="$2"
}
setnamechapter $(echo $outfile|sed -r 's/\./ /g')

insert_version() {
    sed -r 's/<VERSION>/'"$version"'/;'
}

gen_man() {
    (echo "$name($chapter) -- keyboa $version";
     cat $infile ) |
        # Insert version as indicated, anywhere in the scm source
        insert_version |
        #  Process using scdoc
        scdoc > $outfile
}

gen_html() {
    if [ $chapter == 1 ]; then toc=""; else toc=--toc; fi
    cat $infile |
        # Insert version as indicated, anywhere in the scm source
        insert_version |
        # Interlink documents and protect literal underscores
        sed -r 's@\*([a-z]+)\*\(([1-9])\)@<a href="\1.\2.html">*\1(\2)*</a>@g;s/_/\\_/g' |
        # Process using pandoc
        pandoc \
            -V version="$version" \
            -V pagetitle="$name($chapter) -- keyboa $version" \
            -V headertitle="$name($chapter) -- keyboa $version" \
            --template=template.html \
            $toc \
            -t html \
            -o $outfile
    chmod a-x $outfile
}

gen_pdf() {
    if [ $chapter == 1 ]; then toc=""; else toc=--toc; fi
    # Generate .tex file in temp dir
    texfile=$name.$chapter.tex
    cat $infile |
        # Insert version
        insert_version |
        # Use boldface for emphasis, similarly to man
        pandoc \
            -s \
            -V title="$name($chapter) -- keyboa $version" \
            -V title-meta="$name($chapter) -- keyboa $version" \
            -V papersize=A4 \
            -V header-includes="\\renewcommand\em\bf" \
            $toc \
            -f markdown \
            -o $texfile
    # Generate .pdf file in temp dir
    tmpdir=`mktemp -d`
    mv $texfile $tmpdir
    pushd $tmpdir
    # Run pdflatex separately since pandoc on Windows is not cygwin-aware
    for a in `seq 3`; do \
        pdflatex -halt-on-error -interaction=nonstopmode $texfile > $texfile.out; \
        done
    # Move .pdf file back to build dir
    popd
    mv $tmpdir/*.pdf .
    rm -rf $tmpdir
}

# Process using the generator for the given format
gen_$format
